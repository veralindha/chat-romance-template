import { computed, defineComponent } from 'vue';
import { useStep } from './provide';
import { props } from './props';
import { renderSlot as _renderSlot, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue";
export function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", {
    class: "var-steps",
    style: _normalizeStyle({
      flexDirection: _ctx.direction === 'horizontal' ? 'row' : 'column'
    })
  }, [_renderSlot(_ctx.$slots, "default")], 4
  /* STYLE */
  );
}
export default defineComponent({
  render,
  name: 'VarSteps',
  props,

  setup(props) {
    var active = computed(() => props.active);
    var activeColor = computed(() => props.activeColor);
    var inactiveColor = computed(() => props.inactiveColor);
    var direction = computed(() => props.direction);
    var {
      length,
      bindStep
    } = useStep();

    var clickStep = index => {
      props.onClickStep == null ? void 0 : props.onClickStep(index);
    };

    var stepsProvider = {
      active,
      length,
      direction,
      activeColor,
      inactiveColor,
      clickStep
    };
    bindStep(stepsProvider);
  }

});