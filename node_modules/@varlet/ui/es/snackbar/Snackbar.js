import { defineComponent } from 'vue';
import VarSnackbarCore from './core';
import { useTeleport } from '../utils/components';
import { props } from './props';
import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, createVNode as _createVNode, Transition as _Transition, Teleport as _Teleport, openBlock as _openBlock, createBlock as _createBlock } from "vue";
export function render(_ctx, _cache) {
  var _component_var_snackbar_core = _resolveComponent("var-snackbar-core");

  return _openBlock(), _createBlock(_Teleport, {
    to: _ctx.teleport,
    disabled: _ctx.disabled
  }, [_createVNode(_Transition, {
    name: "var-snackbar-fade",
    onAfterEnter: _ctx.onOpened,
    onAfterLeave: _ctx.onClosed
  }, {
    default: _withCtx(() => [_createVNode(_component_var_snackbar_core, _mergeProps(_ctx.$props, {
      class: "var-snackbar-transition"
    }), {
      action: _withCtx(() => [_renderSlot(_ctx.$slots, "action")]),
      default: _withCtx(() => [_renderSlot(_ctx.$slots, "default", {}, () => [_createTextVNode(_toDisplayString(_ctx.content), 1
      /* TEXT */
      )])]),
      _: 3
      /* FORWARDED */

    }, 16
    /* FULL_PROPS */
    )]),
    _: 3
    /* FORWARDED */

  }, 8
  /* PROPS */
  , ["onAfterEnter", "onAfterLeave"])], 8
  /* PROPS */
  , ["to", "disabled"]);
}
export default defineComponent({
  render,
  name: 'VarSnackbar',
  components: {
    VarSnackbarCore
  },
  props,

  setup() {
    var {
      disabled
    } = useTeleport();
    return {
      disabled
    };
  }

});