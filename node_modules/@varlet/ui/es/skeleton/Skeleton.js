import { defineComponent } from 'vue';
import { props } from './props';
import { toSizeUnit } from '../utils/elements';
import { toNumber } from '../utils/shared';
import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from "vue";

var _withScopeId = n => (_pushScopeId(""), n = n(), _popScopeId(), n);

var _hoisted_1 = {
  class: "var--box var-skeleton"
};
var _hoisted_2 = {
  key: 0,
  class: "var-skeleton__data"
};
var _hoisted_3 = {
  key: 1,
  class: "var-skeleton__content"
};

var _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode("div", {
  class: "var-skeleton--animation"
}, null, -1
/* HOISTED */
));

var _hoisted_5 = [_hoisted_4];
var _hoisted_6 = {
  class: "var-skeleton__article"
};

var _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode("div", {
  class: "var-skeleton--animation"
}, null, -1
/* HOISTED */
));

var _hoisted_8 = [_hoisted_7];
var _hoisted_9 = {
  class: "var-skeleton__section"
};

var _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode("div", {
  class: "var-skeleton--animation"
}, null, -1
/* HOISTED */
));

var _hoisted_11 = [_hoisted_10];

var _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode("div", {
  class: "var-skeleton--animation"
}, null, -1
/* HOISTED */
));

var _hoisted_13 = [_hoisted_12];
var _hoisted_14 = {
  key: 2,
  class: "var-skeleton__fullscreen"
};

var _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode("div", {
  class: "var-skeleton--animation"
}, null, -1
/* HOISTED */
));

var _hoisted_16 = [_hoisted_15];
export function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("div", _hoisted_1, [!_ctx.loading ? (_openBlock(), _createElementBlock("div", _hoisted_2, [_renderSlot(_ctx.$slots, "default")])) : _createCommentVNode("v-if", true), _ctx.loading && !_ctx.fullscreen ? (_openBlock(), _createElementBlock("div", _hoisted_3, [_ctx.card ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: "var-skeleton__card",
    style: _normalizeStyle({
      height: _ctx.toSizeUnit(_ctx.cardHeight)
    })
  }, _hoisted_5, 4
  /* STYLE */
  )) : _createCommentVNode("v-if", true), _createElementVNode("div", _hoisted_6, [_ctx.avatar ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: "var-skeleton__avatar",
    style: _normalizeStyle({
      width: _ctx.toSizeUnit(_ctx.avatarSize),
      height: _ctx.toSizeUnit(_ctx.avatarSize)
    })
  }, _hoisted_8, 4
  /* STYLE */
  )) : _createCommentVNode("v-if", true), _createElementVNode("div", _hoisted_9, [_ctx.title ? (_openBlock(), _createElementBlock("div", {
    key: 0,
    class: "var-skeleton__title",
    style: _normalizeStyle({
      width: _ctx.toSizeUnit(_ctx.titleWidth)
    })
  }, _hoisted_11, 4
  /* STYLE */
  )) : _createCommentVNode("v-if", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.toNumber(_ctx.rows), (r, index) => {
    return _openBlock(), _createElementBlock("div", {
      class: "var-skeleton__row",
      key: r,
      style: _normalizeStyle({
        width: _ctx.toSizeUnit(_ctx.rowsWidth[index])
      })
    }, _hoisted_13, 4
    /* STYLE */
    );
  }), 128
  /* KEYED_FRAGMENT */
  ))])])])) : _createCommentVNode("v-if", true), _ctx.loading && _ctx.fullscreen ? (_openBlock(), _createElementBlock("div", _hoisted_14, _hoisted_16)) : _createCommentVNode("v-if", true)]);
}
export default defineComponent({
  render,
  name: 'VarSkeleton',
  props,

  setup() {
    return {
      toSizeUnit,
      toNumber
    };
  }

});