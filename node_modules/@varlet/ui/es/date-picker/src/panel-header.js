import VarButton from '../../button';
import VarIcon from '../../icon';
import { defineComponent, ref, computed, watch } from 'vue';
import { toNumber } from '../../utils/shared';
import { pack } from '../../locale';
import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, Transition as _Transition, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from "vue";

var _withScopeId = n => (_pushScopeId(""), n = n(), _popScopeId(), n);

var _hoisted_1 = {
  class: "var-picker-header"
};
export function render(_ctx, _cache) {
  var _component_var_icon = _resolveComponent("var-icon");

  var _component_var_button = _resolveComponent("var-button");

  return _openBlock(), _createElementBlock("div", _hoisted_1, [_createVNode(_component_var_button, {
    round: "",
    text: "",
    style: {
      "filter": "opacity(0.54)"
    },
    disabled: _ctx.disabled.left,
    onClick: _cache[0] || (_cache[0] = $event => _ctx.checkDate('prev'))
  }, {
    default: _withCtx(() => [_createVNode(_component_var_icon, {
      name: "chevron-left"
    })]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["disabled"]), _createElementVNode("div", {
    class: "var-picker-header__value",
    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('check-panel'))
  }, [_createVNode(_Transition, {
    name: _ctx.reverse ? 'var-date-picker-reverse-translatex' : 'var-date-picker-translatex'
  }, {
    default: _withCtx(() => [(_openBlock(), _createElementBlock("div", {
      key: _ctx.showDate
    }, _toDisplayString(_ctx.showDate), 1
    /* TEXT */
    ))]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["name"])]), _createVNode(_component_var_button, {
    round: "",
    text: "",
    style: {
      "filter": "opacity(0.54)"
    },
    disabled: _ctx.disabled.right,
    onClick: _cache[2] || (_cache[2] = $event => _ctx.checkDate('next'))
  }, {
    default: _withCtx(() => [_createVNode(_component_var_icon, {
      name: "chevron-right"
    })]),
    _: 1
    /* STABLE */

  }, 8
  /* PROPS */
  , ["disabled"])]);
}
export default defineComponent({
  render,
  name: 'PanelHeader',
  components: {
    VarButton,
    VarIcon
  },
  props: {
    date: {
      type: Object,
      required: true
    },
    type: {
      type: String,
      default: 'date'
    },
    disabled: {
      type: Object,
      required: true
    }
  },
  emits: ['check-panel', 'check-date'],

  setup(props, {
    emit
  }) {
    var reverse = ref(false);
    var forwardOrBackNum = ref(0);
    var showDate = computed(() => {
      var _pack$value$datePicke;

      var {
        date,
        type
      } = props;
      var {
        previewMonth,
        previewYear
      } = date;
      if (type === 'month') return toNumber(previewYear) + forwardOrBackNum.value;
      var monthName = (_pack$value$datePicke = pack.value.datePickerMonthDict) == null ? void 0 : _pack$value$datePicke[previewMonth.index].name;
      return pack.value.lang === 'zh-CN' ? previewYear + " " + monthName : monthName + " " + previewYear;
    });

    var checkDate = checkType => {
      emit('check-date', checkType);
      reverse.value = checkType === 'prev';
      forwardOrBackNum.value += checkType === 'prev' ? -1 : 1;
    };

    watch(() => props.date, () => {
      forwardOrBackNum.value = 0;
    });
    return {
      reverse,
      showDate,
      checkDate
    };
  }

});