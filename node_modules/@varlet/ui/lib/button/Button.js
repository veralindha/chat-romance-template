"use strict";

exports.__esModule = true;
exports.render = render;
exports.default = void 0;

var _ripple = _interopRequireDefault(require("../ripple"));

var _loading = _interopRequireDefault(require("../loading"));

var _vue = require("vue");

var _props = require("./props");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = ["disabled"];

function render(_ctx, _cache) {
  var _component_var_loading = (0, _vue.resolveComponent)("var-loading");

  var _directive_ripple = (0, _vue.resolveDirective)("ripple");

  return (0, _vue.withDirectives)(((0, _vue.openBlock)(), (0, _vue.createElementBlock)("button", {
    class: (0, _vue.normalizeClass)(["var-button var--box", ["var-button--" + _ctx.size, _ctx.block ? 'var--flex var-button--block' : 'var--inline-flex', _ctx.disabled ? 'var-button--disabled' : null, _ctx.text ? "var-button--text-" + _ctx.type : "var-button--" + _ctx.type, _ctx.text ? 'var-button--text' : 'var-elevation--2', _ctx.text && _ctx.disabled ? 'var-button--text-disabled' : null, _ctx.round ? 'var-button--round' : null, _ctx.outline ? 'var-button--outline' : null]]),
    style: (0, _vue.normalizeStyle)({
      color: _ctx.textColor,
      background: _ctx.color
    }),
    disabled: _ctx.disabled,
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args)),
    onTouchstart: _cache[1] || (_cache[1] = (...args) => _ctx.handleTouchstart && _ctx.handleTouchstart(...args))
  }, [_ctx.loading ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_loading, {
    key: 0,
    class: "var-button__loading",
    type: _ctx.loadingType,
    size: _ctx.loadingSize,
    radius: _ctx.loadingRadius
  }, null, 8
  /* PROPS */
  , ["type", "size", "radius"])) : (0, _vue.createCommentVNode)("v-if", true), (0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(["var-button__content", [_ctx.loading ? 'var-button--hidden' : null]])
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default")], 2
  /* CLASS */
  )], 46
  /* CLASS, STYLE, PROPS, HYDRATE_EVENTS */
  , _hoisted_1)), [[_directive_ripple, {
    disabled: _ctx.disabled || !_ctx.ripple
  }]]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarButton',
  components: {
    VarLoading: _loading.default
  },
  directives: {
    Ripple: _ripple.default
  },
  props: _props.props,

  setup(props) {
    var handleClick = e => {
      var {
        loading,
        disabled,
        onClick
      } = props;

      if (loading || disabled) {
        return;
      }

      onClick == null ? void 0 : onClick(e);
    };

    var handleTouchstart = e => {
      var {
        loading,
        disabled,
        onTouchstart
      } = props;

      if (loading || disabled) {
        return;
      }

      onTouchstart == null ? void 0 : onTouchstart(e);
    };

    return {
      handleClick,
      handleTouchstart
    };
  }

});

exports.default = _default;