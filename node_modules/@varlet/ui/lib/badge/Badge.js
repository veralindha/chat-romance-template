"use strict";

exports.__esModule = true;
exports.render = render;
exports.default = void 0;

var _icon = _interopRequireDefault(require("../icon"));

var _vue = require("vue");

var _props = require("./props");

var _shared = require("../utils/shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = {
  class: "var-badge var--box"
};
var _hoisted_2 = {
  key: 1
};

function render(_ctx, _cache) {
  var _component_var_icon = (0, _vue.resolveComponent)("var-icon");

  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [(0, _vue.createVNode)(_vue.Transition, {
    name: "var-badge-fade"
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.withDirectives)((0, _vue.createElementVNode)("span", (0, _vue.mergeProps)(_ctx.$attrs, {
      class: ["var-badge__content", _ctx.contentClass],
      style: {
        background: _ctx.color
      }
    }), [_ctx.icon && !_ctx.dot ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_icon, {
      key: 0,
      name: _ctx.icon,
      size: "10px"
    }, null, 8
    /* PROPS */
    , ["name"])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("span", _hoisted_2, (0, _vue.toDisplayString)(_ctx.values), 1
    /* TEXT */
    ))], 16
    /* FULL_PROPS */
    ), [[_vue.vShow, !_ctx.hidden]])]),
    _: 1
    /* STABLE */

  }), (0, _vue.renderSlot)(_ctx.$slots, "default")]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarBadge',
  components: {
    VarIcon: _icon.default
  },
  inheritAttrs: false,
  props: _props.props,

  setup(props, {
    slots
  }) {
    var contentClass = (0, _vue.computed)(() => {
      var {
        type,
        position,
        dot,
        icon
      } = props;
      var positionBasic = (slots.default == null ? void 0 : slots.default()) && "var-badge__position var-badge--" + position;
      var dotClass = dot && 'var-badge__dot';
      var positionClass = getPositionClass();
      var iconClass = icon && 'var-badge__icon';
      return ["var-badge--" + type, positionBasic, dotClass, positionClass, iconClass];
    });
    var values = (0, _vue.computed)(() => {
      var {
        dot,
        value,
        maxValue
      } = props;
      if (dot) return '';
      if (value !== undefined && maxValue !== undefined && (0, _shared.toNumber)(value) > maxValue) return maxValue + "+";
      return value;
    });

    var getPositionClass = () => {
      var {
        position,
        dot
      } = props;
      if (dot && position.includes('right')) return 'var-badge__dot--right';
      if (dot && position.includes('left')) return 'var-badge__dot--left';
    };

    return {
      values,
      contentClass
    };
  }

});

exports.default = _default;