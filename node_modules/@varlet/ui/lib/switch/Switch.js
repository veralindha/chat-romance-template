"use strict";

exports.__esModule = true;
exports.render = render;
exports.default = void 0;

var _vue = require("vue");

var _components = require("../utils/components");

var _shared = require("../utils/shared");

var _provide = require("../form/provide");

var _props = require("./props");

var _formDetails = _interopRequireDefault(require("../form-details"));

var _loading = _interopRequireDefault(require("../loading"));

var _ripple = _interopRequireDefault(require("../ripple"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _withScopeId = n => ((0, _vue.pushScopeId)(""), n = n(), (0, _vue.popScopeId)(), n);

var _hoisted_1 = {
  class: "var-switch"
};

function render(_ctx, _cache) {
  var _component_var_loading = (0, _vue.resolveComponent)("var-loading");

  var _component_var_form_details = (0, _vue.resolveComponent)("var-form-details");

  var _directive_ripple = (0, _vue.resolveDirective)("ripple");

  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [(0, _vue.createElementVNode)("div", {
    class: (0, _vue.normalizeClass)(["var-switch-block", [_ctx.disabled || _ctx.formDisabled ? 'var-switch__disable' : null]]),
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.switchActive && _ctx.switchActive(...args)),
    style: (0, _vue.normalizeStyle)(_ctx.styleComputed.switch)
  }, [(0, _vue.createElementVNode)("div", {
    style: (0, _vue.normalizeStyle)(_ctx.styleComputed.track),
    class: (0, _vue.normalizeClass)(["var-switch__track", [_ctx.modelValue === _ctx.activeValue ? 'var-switch__track-active' : null, _ctx.errorMessage ? 'var-switch__track-error' : null]])
  }, null, 6
  /* CLASS, STYLE */
  ), (0, _vue.withDirectives)((0, _vue.createElementVNode)("div", {
    class: "var-switch__ripple",
    style: (0, _vue.normalizeStyle)(_ctx.styleComputed.ripple)
  }, [(0, _vue.createElementVNode)("div", {
    style: (0, _vue.normalizeStyle)(_ctx.styleComputed.handle),
    class: (0, _vue.normalizeClass)(["var-switch__handle var-elevation--2", [_ctx.modelValue === _ctx.activeValue ? 'var-switch__handle-active' : null, _ctx.errorMessage ? 'var-switch__handle-error' : null]])
  }, [_ctx.loading ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_var_loading, {
    key: 0,
    radius: _ctx.toNumber(_ctx.size) / 2 - 2
  }, null, 8
  /* PROPS */
  , ["radius"])) : (0, _vue.createCommentVNode)("v-if", true)], 6
  /* CLASS, STYLE */
  )], 4
  /* STYLE */
  ), [[_directive_ripple, {
    disabled: !_ctx.ripple || _ctx.disabled || _ctx.loading || _ctx.formDisabled
  }]])], 6
  /* CLASS, STYLE */
  ), (0, _vue.createVNode)(_component_var_form_details, {
    "error-message": _ctx.errorMessage
  }, null, 8
  /* PROPS */
  , ["error-message"])]);
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarSwitch',
  components: {
    VarLoading: _loading.default,
    VarFormDetails: _formDetails.default
  },
  directives: {
    Ripple: _ripple.default
  },
  props: _props.props,

  setup(props) {
    var {
      bindForm,
      form
    } = (0, _provide.useForm)();
    var {
      errorMessage,
      validateWithTrigger: vt,
      validate: v,
      resetValidation
    } = (0, _components.useValidation)();

    var validate = () => v(props.rules, props.modelValue);

    var validateWithTrigger = () => (0, _vue.nextTick)(() => vt(['onChange'], 'onChange', props.rules, props.modelValue));

    var styleComputed = (0, _vue.computed)(() => {
      var {
        size,
        modelValue,
        color,
        closeColor,
        loadingColor,
        activeValue
      } = props;
      var sizeNum = (0, _shared.toNumber)(size);
      var switchWidth = sizeNum * 2;
      var switchHeight = sizeNum * 1.2;
      return {
        handle: {
          width: size + "px",
          height: size + "px",
          backgroundColor: modelValue === activeValue ? color || '' : closeColor || '',
          color: loadingColor && loadingColor
        },
        ripple: {
          left: modelValue === activeValue ? sizeNum / 2 + "px" : "-" + sizeNum / 2 + "px",
          color: modelValue === activeValue ? color || '' : closeColor || '#999',
          width: sizeNum * 2 + "px",
          height: sizeNum * 2 + "px"
        },
        track: {
          height: switchHeight * 0.6 + "px",
          width: switchWidth - 2 + "px",
          borderRadius: switchWidth / 3 + "px",
          filter: modelValue === activeValue || errorMessage != null && errorMessage.value ? 'opacity(.6)' : 'brightness(.6)',
          backgroundColor: modelValue === activeValue ? color || '' : closeColor || ''
        },
        switch: {
          height: switchHeight + "px",
          width: switchWidth + "px"
        }
      };
    });

    var switchActive = () => {
      var {
        onClick,
        onChange,
        disabled,
        loading,
        readonly,
        modelValue,
        activeValue,
        inactiveValue,
        'onUpdate:modelValue': updateModelValue
      } = props;
      onClick == null ? void 0 : onClick();
      if (disabled || loading || readonly || form != null && form.disabled.value || form != null && form.readonly.value) return;
      var newValue = modelValue === activeValue ? inactiveValue : activeValue;
      onChange == null ? void 0 : onChange(newValue);
      updateModelValue == null ? void 0 : updateModelValue(newValue);
      validateWithTrigger();
    };

    var reset = () => {
      var _props$onUpdateModel;

      (_props$onUpdateModel = props['onUpdate:modelValue']) == null ? void 0 : _props$onUpdateModel.call(props, props.inactiveValue);
      resetValidation();
    };

    var switchProvider = {
      reset,
      validate,
      resetValidation
    };
    bindForm == null ? void 0 : bindForm(switchProvider);
    return {
      switchActive,
      toNumber: _shared.toNumber,
      styleComputed,
      errorMessage,
      formDisabled: form == null ? void 0 : form.disabled,
      formReadonly: form == null ? void 0 : form.readonly
    };
  }

});

exports.default = _default;