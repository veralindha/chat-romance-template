"use strict";

exports.__esModule = true;
exports.render = render;
exports.default = void 0;

var _vue = require("vue");

var _button = _interopRequireDefault(require("../button"));

var _icon = _interopRequireDefault(require("../icon"));

var _props = require("./props");

var _shared = require("../utils/shared");

var _elements = require("../utils/elements");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function render(_ctx, _cache) {
  var _component_var_icon = (0, _vue.resolveComponent)("var-icon");

  var _component_var_button = (0, _vue.resolveComponent)("var-button");

  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
    class: (0, _vue.normalizeClass)(["var-back-top", [_ctx.show ? 'var-back-top--active' : null]]),
    onClick: _cache[0] || (_cache[0] = (0, _vue.withModifiers)((...args) => _ctx.click && _ctx.click(...args), ["stop"]))
  }, [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, () => [(0, _vue.createVNode)(_component_var_button, {
    type: "primary",
    round: "",
    "var-back-top-cover": ""
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.createVNode)(_component_var_icon, {
      name: "chevron-up"
    })]),
    _: 1
    /* STABLE */

  })])], 2
  /* CLASS */
  );
}

var _default = (0, _vue.defineComponent)({
  render,
  name: 'VarBackTop',
  components: {
    VarButton: _button.default,
    VarIcon: _icon.default
  },
  props: _props.props,

  setup(props) {
    var element;
    var show = (0, _vue.ref)(false);

    var click = () => {
      props.onClick == null ? void 0 : props.onClick();
      var left = (0, _elements.getScrollLeft)(element);
      (0, _elements.scrollTo)(element, {
        left,
        duration: props.duration,
        animation: _shared.easeInOutCubic
      });
    };

    var scroll = () => {
      show.value = (0, _elements.getScrollTop)(element) >= (0, _shared.toNumber)(props.visibilityHeight);
    };

    var throttleScroll = (0, _shared.throttle)(scroll, 200);

    var getHTMLElement = () => {
      if (!(0, _shared.isString)(props.target)) throw Error('[Varlet] BackTop: type of prop "target" should be a string');
      var el = document.querySelector(props.target);
      if (!el) throw Error('[Varlet] BackTop: "target" should be a selector');
      return el;
    };

    (0, _vue.onMounted)(() => {
      element = props.target ? getHTMLElement() : window;
      element.addEventListener('scroll', throttleScroll);
    });
    (0, _vue.onBeforeUnmount)(() => {
      element.removeEventListener('scroll', throttleScroll);
    });
    return {
      show,
      click
    };
  }

});

exports.default = _default;